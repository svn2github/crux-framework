<?xml version="1.0" encoding="UTF-8"?>
<web-app>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<context-param> 
	    <param-name>outputCharset</param-name> 
	    <param-value>UTF-8</param-value> 
	</context-param> 

	<listener>
        <listener-class>org.cruxframework.crux.core.server.InitializerListener</listener-class>
    </listener>
	
	<servlet>
		<servlet-name>remoteServiceServlet</servlet-name>
		<servlet-class>org.cruxframework.crux.core.server.dispatch.RemoteServiceServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>remoteServiceServlet</servlet-name>
		<url-pattern>*.rpc</url-pattern>
	</servlet-mapping>
	
	<!-- Shindig configuration 
	==========================================================================
	-->
	<!-- Render a Gadget -->
    <context-param>
        <param-name>guice-modules</param-name>
        <param-value>
      		org.apache.shindig.common.PropertiesModule:
      		org.cruxframework.crux.gadgets.CruxContainerGuiceModule:
            org.apache.shindig.common.cache.ehcache.EhCacheModule:
      		org.apache.shindig.gadgets.oauth.OAuthModule:
      		org.apache.shindig.extras.ShindigExtrasGuiceModule
      	</param-value>
    </context-param>

   <context-param>
  	<param-name>system.properties</param-name>
     <param-value>
    	shindig.host=localhost
    	
    	aKey=/shindig/gadgets/proxy?container=default&amp;url=
    	shindig.port=
    	
     </param-value>
  </context-param> 

	<listener>
	  <listener-class>org.apache.shindig.common.servlet.GuiceServletContextListener</listener-class>
	</listener>
  
  	<servlet>
	  <servlet-name>xml-to-html</servlet-name>
	  <servlet-class>
	    org.apache.shindig.gadgets.servlet.GadgetRenderingServlet
	  </servlet-class>
	</servlet>
	<servlet>
	  <servlet-name>accel</servlet-name>
	  <servlet-class>
	    org.apache.shindig.gadgets.servlet.HtmlAccelServlet
	  </servlet-class>
	</servlet>
	
	<!-- Proxy -->
	<servlet>
	  <servlet-name>proxy</servlet-name>
	  <servlet-class>
	    org.apache.shindig.gadgets.servlet.ProxyServlet
	  </servlet-class>
	</servlet>
	
	<!-- makeRequest -->
	<servlet>
	  <servlet-name>makeRequest</servlet-name>
	  <servlet-class>
	    org.apache.shindig.gadgets.servlet.MakeRequestServlet
	  </servlet-class>
	</servlet>
	
	<!-- Concat -->
	<servlet>
	  <servlet-name>concat</servlet-name>
	  <servlet-class>
	    org.apache.shindig.gadgets.servlet.ConcatProxyServlet
	  </servlet-class>
	</servlet>
	
	<!-- OAuth callback -->
	<servlet>
	  <servlet-name>oauthCallback</servlet-name>
	  <servlet-class>
	    org.apache.shindig.gadgets.servlet.OAuthCallbackServlet
	  </servlet-class>
	</servlet>
	
	<!-- Metadata RPC -->
	<servlet>
	  <servlet-name>metadata</servlet-name>
	  <servlet-class>
	    org.apache.shindig.gadgets.servlet.RpcServlet
	  </servlet-class>
	</servlet>
	
	<!-- javascript serving -->
	<servlet>
	  <servlet-name>js</servlet-name>
	  <servlet-class>org.apache.shindig.gadgets.servlet.JsServlet</servlet-class>
	</servlet>
	
	<servlet>
	  <servlet-name>restapiServlet</servlet-name>
	  <servlet-class>
	    org.apache.shindig.protocol.DataServiceServlet
	  </servlet-class>
	  <init-param>
	    <param-name>handlers</param-name>
	    <param-value>org.apache.shindig.handlers</param-value>
	  </init-param>
	</servlet>
	
	<!-- Serve social RPC api -->
	<servlet>
	  <servlet-name>jsonRpcServlet</servlet-name>
	  <servlet-class>
	    org.apache.shindig.protocol.JsonRpcServlet
	  </servlet-class>
	  <init-param>
	    <param-name>handlers</param-name>
	    <param-value>org.apache.shindig.handlers</param-value>
	  </init-param>
	</servlet>
	
	<servlet-mapping>
	  <servlet-name>js</servlet-name>
	  <url-pattern>/gadgets/js/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>proxy</servlet-name>
	  <url-pattern>/gadgets/proxy/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>makeRequest</servlet-name>
	  <url-pattern>/gadgets/makeRequest</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>jsonRpcServlet</servlet-name>
	  <url-pattern>/rpc/*</url-pattern>
	  <url-pattern>/gadgets/api/rpc/*</url-pattern>
	  <url-pattern>/social/rpc/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>restapiServlet</servlet-name>
	  <url-pattern>/rest/*</url-pattern>
	  <url-pattern>/gadgets/api/rest/*</url-pattern>
	  <url-pattern>/social/rest/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>concat</servlet-name>
	  <url-pattern>/gadgets/concat</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>oauthCallback</servlet-name>
	  <url-pattern>/gadgets/oauthcallback</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>xml-to-html</servlet-name>
	  <url-pattern>/gadgets/ifr</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>accel</servlet-name>
	  <url-pattern>/gadgets/accel</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>metadata</servlet-name>
	  <url-pattern>/gadgets/metadata</url-pattern>
	</servlet-mapping>
	
	<!-- End Shindig configuration 
	==========================================================================
	-->
	
	
	
	<!--antReplacementBlockBegin-->
	<!--
	===========================================================================
	Development time CRUX listener and filters: not required in production 
	environment. The comments "antReplacementBlockBegin" e "antReplacementBlockEnd"   
	are used by the ant task for removing the filters when generating the  
	application distribution file. Don't remove those comments.
	===========================================================================			
	-->
	<listener>
        <listener-class>org.cruxframework.crux.core.server.DevModeInitializerListener</listener-class>
    </listener>
	<filter>
		<display-name>CruxFilter</display-name>
		<filter-name>CruxFilter</filter-name>
		<filter-class>org.cruxframework.crux.core.server.CruxFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CruxFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter>
		<display-name>DeclarativeUIFilter</display-name>
		<filter-name>DeclarativeUIFilter</filter-name>
		<filter-class>org.cruxframework.crux.core.declarativeui.filter.DeclarativeUIFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>DeclarativeUIFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<!--antReplacementBlockEnd-->

</web-app>