= 1 Core Messages=

== 1.1 Client Messages==

=== 1.1.1 Client Errors===

This section describes the errors that can occur during client (browser) processing.

|| *Error Code* || *Error Message* || *Can Be Caused By* ||
||*{{{[event 001]}}}*||Client Controller Named {{{<controller>}}} not found.||1. A controller refered by some widget or by some screen invoker operation <br/>is not declared in {{{useController}}} attribute of {{{<screen>}}} tag on page.<br/>2. You are using GWT Hosted mode hot deploy and _*Crux*_ is set <br/>to optimize your code including on your script only the controllers <br/>declared on page. If you insert a new controller, just restart the GWT console.|| 
||*{{{[event 002]}}}*||Error running client method {{{<call>}}}.||During the invocation of {{{<call>}}}, an uncaught exception was throwed.<br/> Search GWT console for the complete stacktrace.|| 
||*{{{[event 003]}}}*||Invalid declaration for handler method {{{<call>}}}. <br/>Correct syntaxe is {{{<controller.method>}}}.||The {{{<call>}}} does not follow the _*Crux*_ syntax for event declarations: {{{<controller.method>}}}|| 
||*{{{[screenFactory 001]}}}*||Error Creating widget: {{{<errMsg>}}}. See Log for more detail.||This is a generic error, caused by any exception throwed during document parser.<br/> You must consult GWT console for the complete stacktrace.|| 
||*{{{[screenFactory 002]}}}*||Can not found widgetFactory for type: {{{widgetType}}}.||1. The type of the widget declared on {{{<span> type}}} attribute does not have any <br/>correspondent registered on _*Crux*_ declarative engine.<br/>2. You are using GWT Hosted mode hot deploy and _*Crux*_ is set <br/>to optimize your code including on your script only the widget factories <br/>used on page. If you insert a new type of widget in your HTML, <br/>just restart the GWT console.|| 
||*{{{[widget 001]}}}*||The id attribute is required for CRUX widgets.||A widget was inserted on page without ID.|| 
||*{{{[widget 002]}}}*||The widget {{{<widgetId>}}} does not implement HasWidgets and can <br/>not contains any other widget.||An widget was declared on page inside another widget that does not support inner widgets.||
||*{{{[widget 003]}}}*||Can not create widget {{{<widgetId>}}}. Verify the widget type.||An error occured while instanting the widget.<br/> The widgetFactory associated with this type just returned null.|| 
||*{{{[widget 004]}}}*||The span element must contains at least one child.||Some widget declaration is invalid on page. <br/> The WidgetFactory that was trying to create the widget <br/>was expecting to find elements inside the {{{<span>}}} tag it was analysing.|| 
||*{{{[widget 005]}}}*||The span element does not represents a widget.||A widget declaration is invalid on page. <br/> The WidgetFactory that was trying to create the widget <br/>was expecting to find a widget on the {{{<span>}}} tag it was analysing.|| 
||*{{{[widget 006]}}}*||The element is not a span.||The WidgetFactory that was trying to create the widget <br/>was expecting to find a {{{<span>}}} tag.|| 
||*{{{[callback 001]}}}*||An Invalid controller was passed to AsyncCallbackAdapter.||AsyncCallbackAdapter received an object as parameter in constructor<br/> that is not a valid controller object.||

=== 1.1.2 Client Warning Messages===

This section describes the warning messages that can occur during client (browser) processing.

|| *Message Code* || *Message* ||
||*{{{[widget 007]}}}*||The widget {{{<widgetId>}}} was added to a pure HTML node where <br/>already exists other children. In this case, crux can not ensure <br/>an order for this widget. To solve this, If you must use panels as widget<br/>parent or enable the wrapSiblingWidgets config property.||
 

== 1.2 Server Messages==

=== 1.2.1 Server Errors===

This section describes the errors that can occur during server processing.

|| *Error Code* || *Error Message* || *Can Be Caused By* ||

=== 1.2.2 Server Messages===

This section describes the messages that can occur during server processing.

|| *Message Code* || *Message* ||Occurs when||

== 1.3 Rebind Errors==

Crux contains a lot of Generators to perform all of its features. This section describes the errors that can occur during rebind process. 

|| *Error Code* || *Error Message* || *Can Be Caused By* ||

= 2 Basic Widgets Errors=

= 3 Advanced Widgets Errors=
